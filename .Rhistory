panel.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"))
simpson <- combined_data %>%
filter(Pitcher == "Sophia Simpson") %>%
mutate(PitchType = case_when(RelSpeed < 61 ~ "Changeup",
InducedVertBreak > -2 ~ "Riseball",
TRUE ~ "Dropball"))
simpson_pitch_metrics <- simpson %>%
drop_na(HorzBreak, SpinRate) %>%
group_by(PitchType) %>%
summarise(RelSpeed = mean(RelSpeed),
HorzBreak = mean(HorzBreak),
InducedVertBreak = mean(InducedVertBreak),
SpinRate = mean(SpinRate),
SpinAxis = mean(adj_SpinAxis),
count = n()) %>%
ungroup()
simpson_pitch_metrics %>%
gt(rowname_col = "PitchType") %>%
cols_hide(count) %>%
tab_spanner(columns = c("HorzBreak", "InducedVertBreak"),
label = "Induced Break") %>%
cols_label(HorzBreak = "Horizontal",
InducedVertBreak = "Vertical",
SpinRate = "Spin Rate (RPM)",
SpinAxis = "Spin Axis") %>%
tab_header(title = "Pitch Breakdown") %>%
fmt_number(2:6, decimals = 1) %>%
gt_theme_guardian() %>%
tab_options(heading.align = 'center')
ggplot(simpson, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = PitchType), alpha = .7) +
geom_point(data = simpson_pitch_metrics, aes(x = HorzBreak, y = InducedVertBreak, color = PitchType), size = 5) +
xlim(-15,15) +
ylim(-15,15) +
theme_ipsum_es() +
labs(title = "Induced Break",
color = "Pitch Type",
x = "Horizonal Break (In.)",
y = "Induced Vertical Break (In.)") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"),
panel.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"))
simpson <- combined_data %>%
filter(Pitcher == "Sophia Simpson") %>%
mutate(PitchType = case_when(RelSpeed < 57 ~ "Changeup",
InducedVertBreak > -2 ~ "Riseball",
TRUE ~ "Dropball"))
simpson_pitch_metrics <- simpson %>%
drop_na(HorzBreak, SpinRate) %>%
group_by(PitchType) %>%
summarise(RelSpeed = mean(RelSpeed),
HorzBreak = mean(HorzBreak),
InducedVertBreak = mean(InducedVertBreak),
SpinRate = mean(SpinRate),
SpinAxis = mean(adj_SpinAxis),
count = n()) %>%
ungroup()
simpson_pitch_metrics %>%
gt(rowname_col = "PitchType") %>%
cols_hide(count) %>%
tab_spanner(columns = c("HorzBreak", "InducedVertBreak"),
label = "Induced Break") %>%
cols_label(HorzBreak = "Horizontal",
InducedVertBreak = "Vertical",
SpinRate = "Spin Rate (RPM)",
SpinAxis = "Spin Axis") %>%
tab_header(title = "Pitch Breakdown") %>%
fmt_number(2:6, decimals = 1) %>%
gt_theme_guardian() %>%
tab_options(heading.align = 'center')
ggplot(simpson, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = PitchType), alpha = .7) +
geom_point(data = simpson_pitch_metrics, aes(x = HorzBreak, y = InducedVertBreak, color = PitchType), size = 5) +
xlim(-15,15) +
ylim(-15,15) +
theme_ipsum_es() +
labs(title = "Induced Break",
color = "Pitch Type",
x = "Horizonal Break (In.)",
y = "Induced Vertical Break (In.)") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"),
panel.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"))
simpson <- combined_data %>%
filter(Pitcher == "Sophia Simpson") %>%
mutate(PitchType = case_when(RelSpeed < 57 ~ "Changeup",
InducedVertBreak > -2.2 ~ "Riseball",
TRUE ~ "Dropball"))
simpson_pitch_metrics <- simpson %>%
drop_na(HorzBreak, SpinRate) %>%
group_by(PitchType) %>%
summarise(RelSpeed = mean(RelSpeed),
HorzBreak = mean(HorzBreak),
InducedVertBreak = mean(InducedVertBreak),
SpinRate = mean(SpinRate),
SpinAxis = mean(adj_SpinAxis),
count = n()) %>%
ungroup()
simpson_pitch_metrics %>%
gt(rowname_col = "PitchType") %>%
cols_hide(count) %>%
tab_spanner(columns = c("HorzBreak", "InducedVertBreak"),
label = "Induced Break") %>%
cols_label(HorzBreak = "Horizontal",
InducedVertBreak = "Vertical",
SpinRate = "Spin Rate (RPM)",
SpinAxis = "Spin Axis") %>%
tab_header(title = "Pitch Breakdown") %>%
fmt_number(2:6, decimals = 1) %>%
gt_theme_guardian() %>%
tab_options(heading.align = 'center')
ggplot(simpson, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = PitchType), alpha = .7) +
geom_point(data = simpson_pitch_metrics, aes(x = HorzBreak, y = InducedVertBreak, color = PitchType), size = 5) +
xlim(-15,15) +
ylim(-15,15) +
theme_ipsum_es() +
labs(title = "Induced Break",
color = "Pitch Type",
x = "Horizonal Break (In.)",
y = "Induced Vertical Break (In.)") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"),
panel.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"))
ggplot(simpson %>% filter(PitchType %in% simpson_pitch_metrics$PitchType), aes(x = adj_SpinAxis, y = RelSpeed)) +
geom_point(aes(color = PitchType), alpha = .7) +
geom_point(data = simpson_pitch_metrics, aes(x = SpinAxis, y = RelSpeed, color = PitchType), size = 5) +
coord_polar() +
scale_x_continuous(breaks = seq(0,360,30), lim = c(0,360)) +
theme_ipsum_es() +
labs(title = "Spin Profiles",
subtitle = "(Distance from Middle: Pitch Velo)",
color = "Pitch Type") +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5),
axis.text.y = element_blank(),
axis.title = element_blank(),
plot.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"),
panel.background = element_rect(fill = "#e5e5e5", color = "#e5e5e5"))
library(softballR)
?ncaa_softball_scoreboard
library(softballR)
library(tidyverse)
source("~/Projects/softball-projects/get_power_ratings.R")
box <- load_ncaa_softball_playerbox(2023, category = "Hitting")
scoreboard <- load_ncaa_softball_scoreboard(2023)
logos <- scoreboard %>%
distinct(home_team, home_team_logo)
power_ratings <- get_power_ratings(scoreboard)
opponent_defensive_stats <- rbind(scoreboard[c(9,1,4,5,8)] %>%
`names<-`(c("date", "team", "runs", "opponent", "opponent_runs")),
scoreboard[c(9,5,8,1,4)] %>%
`names<-`(c("date", "team", "runs", "opponent", "opponent_runs"))) %>%
merge(power_ratings %>% select(team, defensive_rating), by.x = "opponent", by.y = "team") %>%
group_by(team) %>%
summarise(avg_opp_def_rating = mean(defensive_rating)) %>%
ungroup()
team_games <- box %>%
group_by(team, game_id) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(team) %>%
summarise(games = n()) %>%
filter(games >= 20)
team_stats <- box %>%
mutate(across(c(3:74), as.numeric)) %>%
mutate(across(c(3:74), ~replace_na(.,0))) %>%
merge(team_games, by = "team") %>%
group_by(team, games) %>%
summarise(across(4:74,
.fns = sum)) %>%
filter(games >= 20) %>%
mutate(across(3:72,
.fns = \(col) col / games)) %>%
mutate(x1b = h - x2b - x3b - hr) %>%
ungroup() %>%
select(r, x1b, x2b, x3b, hr, bb_2, hbp)
team_model <- lm(r ~ 0 + ., data = team_stats)
stats <- box %>%
mutate(across(c(3:74), as.numeric)) %>%
mutate(across(c(3:74), ~replace_na(.,0))) %>%
mutate(x1b = h - x2b - x3b - hr) %>%
group_by(player, team) %>%
summarise(across(where(is.numeric),
.fns = sum),
OBP = (h + bb_2 + hbp) / (ab + bb_2 + hbp + sf + sh),
SLG = tb / ab,
OPS = OBP + SLG,
SOr = k / (ab + bb + hbp + sf + sh),
wOBA = (coef(team_model)["bb_2"] * bb_2 + coef(team_model)["hbp"] * hbp +
coef(team_model)["x1b"] * x1b + coef(team_model)["x2b"] * x2b +
coef(team_model)["x3b"] * x3b + coef(team_model)["hr"] * hr) /
(ab + bb - ibb + sf + sh)) %>%
filter(!is.infinite(wOBA) & !is.na(wOBA)) %>%
filter(ab >= 50) %>%
merge(logos, by.x = "team", by.y = "home_team") %>%
merge(opponent_defensive_stats, by = "team")
avg_obp = mean(stats$h + stats$bb_2 + stats$hbp) / mean(stats$ab + stats$bb + stats$hbp + stats$sf + stats$sh)
avg_woba = mean(stats$wOBA * stats$ab) / mean(stats$ab)
woba_constant <- avg_woba - avg_obp
stats$wOBA <- stats$wOBA - woba_constant
model <- lm(wOBA ~ avg_opp_def_rating, data = stats)
hitter_stats_upd <- stats %>%
filter(ab >= 100) %>%
mutate(wOBA = wOBA + coef(model)[2] * avg_opp_def_rating) %>%
separate(player, c("last", "first"), ", ") %>%
mutate(player = paste(first, last),
rank = rank(-wOBA)) %>%
arrange(rank) %>%
select(rank, home_team_logo, player, wOBA, OBP, OPS, SOr)
box <- readRDS("~/Projects/softball-projects/d1_pitching_box_scores_2023.RDS") %>%
distinct()
scoreboard <- load_ncaa_softball_scoreboard(2023)
logos <- scoreboard %>%
distinct(home_team, home_team_logo)
power_ratings <- get_power_ratings(scoreboard)
opponent_offensive_stats <- rbind(scoreboard[c(9,1,4,5,8)] %>%
`names<-`(c("date", "team", "runs", "opponent", "opponent_runs")),
scoreboard[c(9,5,8,1,4)] %>%
`names<-`(c("date", "team", "runs", "opponent", "opponent_runs"))) %>%
merge(power_ratings %>% select(team, offensive_rating), by.x = "opponent", by.y = "team") %>%
group_by(team) %>%
summarise(avg_opp_off_rating = mean(offensive_rating)) %>%
ungroup()
stats <- box %>%
separate(ip, c("innings", "frac"), sep = "\\.") %>%
mutate(ip = ifelse(is.na(frac), innings, as.numeric(innings) + as.numeric(frac) * 1/3)) %>%
select(-c(innings, frac)) %>%
mutate(across(c(3:34,38), as.numeric)) %>%
group_by(player, team) %>%
summarise(across(where(is.numeric),
.fns = sum),
ip = sum(as.numeric(ip)),
SOr = so / bf,
BBr = (bb + hb) / bf,
ERA = er / sum(ip) * 7,
FIP = ((13 * hr_a) + (3 * (bb + hb)) - 2 * so) / sum(ip)) %>%
merge(opponent_offensive_stats, by = "team") %>%
merge(logos, by.x = "team", by.y = "home_team") %>%
ungroup()
avg_era = mean(stats$ERA * stats$ip) / mean(stats$ip)
avg_fip = mean(stats$FIP * stats$ip) / mean(stats$ip)
fip_constant <- avg_era - avg_fip
stats$FIP <- stats$FIP + fip_constant
model <- lm(FIP ~ avg_opp_off_rating, data = stats)
pitcher_stats_upd <- stats %>%
filter(ip >= 50) %>%
mutate(wFIP = FIP + coef(model)[2] * avg_opp_off_rating) %>%
separate(player, c("last", "first"), ", ") %>%
mutate(player = paste(first, last),
rank = rank(wFIP)) %>%
arrange(wFIP) %>%
select(rank, home_team_logo, player, wFIP, SOr, BBr, ERA)
blast <- read_csv("~/CSE/Data/blast_data.csv")
players <- read_csv("~/CSE/Data/all_players.csv") %>%
mutate(player = paste(FirstName, LastName)) %>%
select(CSE_PlayerID, player)
blast_data <- inner_join(blast, players, by = "CSE_PlayerID")
rapsodo <- read_csv("~/CSE/Data/rapsodo_data.csv")
pitch_types <- read_csv("~/CSE/Data/pitch_types.csv")
players <- read_csv("~/CSE/Data/all_players.csv") %>%
mutate(player = paste(FirstName, LastName)) %>%
select(CSE_PlayerID, player)
rapsodo_data <- inner_join(rapsodo, players, by = "CSE_PlayerID") %>%
merge(pitch_types, by.x = "pitch_type_id", by.y = "id")
combined_hitting <- inner_join(blast_data, hitter_stats_upd, by = "player") %>%
select(c(4:16, 24:27))
wOBA_model <- glm(wOBA ~ Plane + Connection + Rotation + BatSpeed + RotationalAcceleration + OnPlaneEfficiency + AttackAngle + EarlyConnection + ConnectionAtImpact + VerticalBatAngle + Power + TimeToContact + PeakHandSpeed, data = combined_hitting)
OBP_model <- glm(OBP ~ Plane + Connection + Rotation + BatSpeed + RotationalAcceleration + OnPlaneEfficiency + AttackAngle + EarlyConnection + ConnectionAtImpact + VerticalBatAngle + Power + TimeToContact + PeakHandSpeed, data = combined_hitting)
OPS_model <- glm(OPS ~ Plane + Connection + Rotation + BatSpeed + RotationalAcceleration + OnPlaneEfficiency + AttackAngle + EarlyConnection + ConnectionAtImpact + VerticalBatAngle + Power + TimeToContact + PeakHandSpeed, data = combined_hitting)
SOr_model <- glm(SOr ~ Plane + Connection + Rotation + BatSpeed + RotationalAcceleration + OnPlaneEfficiency + AttackAngle + EarlyConnection + ConnectionAtImpact + VerticalBatAngle + Power + TimeToContact + PeakHandSpeed, data = combined_hitting)
combined_pitching <- inner_join(rapsodo_data, pitcher_stats_upd, by = "player") %>%
select(c(16, 5:10, 19:22))
View(combined_hitting)
combined_hitting <- inner_join(blast_data, hitter_stats_upd, by = "player")
View(combined_hitting)
ggplot(combined_hitting, aes(x = BatSpeed, y = wOBA)) +
geom_point() +
geom_smooth(method = 'lm')
wOBA_model <- glm(wOBA ~ Plane + Connection + Rotation + BatSpeed + RotationalAcceleration + OnPlaneEfficiency + AttackAngle + EarlyConnection + ConnectionAtImpact + VerticalBatAngle + Power + TimeToContact + PeakHandSpeed, data = combined_hitting)
summary(wOBA_model)
library(softballR)
library(tidyverse)
library(gt)
library(gtExtras)
setwd("~/Projects/softball-projects")
source("~/Projects/softball-projects/get_power_ratings.R")
scoreboard_2022 <- load_espn_scoreboard(2022)
scoreboard_2023 <- load_ncaa_softball_scoreboard(2023)
standings_2023 <- get_power_ratings(scoreboard_2023) %>%
select(team, power_rating)
logos <- scoreboard_2023 %>%
distinct(home_team, home_team_logo)
load("~/Projects/softball-projects/power_rating_model.RDA")
start_date <- as.Date("2023-05-10")
end_date <- as.Date("2023-05-13")
scoreboard_test <- scoreboard_2023 %>%
mutate(date = as.Date(paste0(word(game_date,3,sep="/"),"-",word(game_date,1,sep="/"),"-",word(game_date,2,sep="/")))) %>%
filter(date <= end_date & date >= start_date) %>%
mutate(team1_win = home_team_runs > away_team_runs) %>%
left_join(standings_2023 %>% rename("team1_rating" = "power_rating"), by = c("home_team" = "team")) %>%
left_join(standings_2023 %>% rename("team2_rating" = "power_rating"), by = c("away_team" = "team")) %>%
drop_na(team1_rating, team2_rating) %>%
filter(team1_rating > 0 & team2_rating > 0) %>%
mutate(log_team1_rating = log(team1_rating),
log_team2_rating = log(team2_rating),
rating_diff = team1_rating - team2_rating,
log_rating_diff = log_team1_rating - log_team2_rating)
scoreboard_test$likelihood <- predict(model, scoreboard_test, type = "response")
scoreboard_test$resid <- scoreboard_test$team1_win - scoreboard_test$likelihood
scoreboard_test <- scoreboard_test %>%
mutate(score = paste(home_team_runs, away_team_runs, sep = "-"),
rating_diff = abs(rating_diff),
home_team = str_replace(home_team, "&amp;", "&"))
table <- scoreboard_test %>%
arrange(desc(abs(resid))) %>%
head(n = 5) %>%
select(date,home_team_logo, home_team, away_team_logo, away_team, home_team_runs, away_team_runs, score, rating_diff) %>%
gt() %>%
fmt_date(date, date_style = "Md") %>%
cols_hide(c(home_team_runs,away_team_runs)) %>%
fmt_number(rating_diff, decimals = 2) %>%
gt_img_rows(home_team_logo) %>%
gt_img_rows(away_team_logo) %>%
cols_label(date = "Date",
home_team_logo = "",
home_team = "",
away_team_logo = "",
away_team = "",
score = "Score",
rating_diff = "Rating Diff.") %>%
tab_style(cell_borders(sides = "right",
style = "dashed",
color = "grey"),
cells_body(columns = c(date, home_team, away_team),
rows = everything())) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(home_team, home_team_logo),
rows = home_team_runs > away_team_runs
)) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(away_team, away_team_logo),
rows = home_team_runs < away_team_runs
)) %>%
gt_theme_espn() %>%
tab_header(title = "Biggest NCAA Softball Upsets",
subtitle = paste0(format(start_date, "%m/%d")," - ",format(end_date, "%m/%d"))) %>%
tab_footnote(footnote = "(Strength of Schedule Adjusted Power Rating)",
locations = cells_column_labels(columns = rating_diff)) %>%
opt_align_table_header(align = "center") %>%
tab_options(heading.title.font.weight = "bold",
heading.title.font.size = "24px")
table
scoreboard_2023 <- load_ncaa_softball_scoreboard(2023) %>%
distinct()
standings_2023 <- get_power_ratings(scoreboard_2023) %>%
select(team, power_rating)
logos <- scoreboard_2023 %>%
distinct(home_team, home_team_logo)
load("~/Projects/softball-projects/power_rating_model.RDA")
start_date <- as.Date("2023-05-10")
end_date <- as.Date("2023-05-13")
scoreboard_test <- scoreboard_2023 %>%
mutate(date = as.Date(paste0(word(game_date,3,sep="/"),"-",word(game_date,1,sep="/"),"-",word(game_date,2,sep="/")))) %>%
filter(date <= end_date & date >= start_date) %>%
mutate(team1_win = home_team_runs > away_team_runs) %>%
left_join(standings_2023 %>% rename("team1_rating" = "power_rating"), by = c("home_team" = "team")) %>%
left_join(standings_2023 %>% rename("team2_rating" = "power_rating"), by = c("away_team" = "team")) %>%
drop_na(team1_rating, team2_rating) %>%
filter(team1_rating > 0 & team2_rating > 0) %>%
mutate(log_team1_rating = log(team1_rating),
log_team2_rating = log(team2_rating),
rating_diff = team1_rating - team2_rating,
log_rating_diff = log_team1_rating - log_team2_rating)
scoreboard_test$likelihood <- predict(model, scoreboard_test, type = "response")
scoreboard_test$resid <- scoreboard_test$team1_win - scoreboard_test$likelihood
scoreboard_test <- scoreboard_test %>%
mutate(score = paste(home_team_runs, away_team_runs, sep = "-"),
rating_diff = abs(rating_diff),
home_team = str_replace(home_team, "&amp;", "&"))
table <- scoreboard_test %>%
arrange(desc(abs(resid))) %>%
head(n = 5) %>%
select(date,home_team_logo, home_team, away_team_logo, away_team, home_team_runs, away_team_runs, score, rating_diff) %>%
gt() %>%
fmt_date(date, date_style = "Md") %>%
cols_hide(c(home_team_runs,away_team_runs)) %>%
fmt_number(rating_diff, decimals = 2) %>%
gt_img_rows(home_team_logo) %>%
gt_img_rows(away_team_logo) %>%
cols_label(date = "Date",
home_team_logo = "",
home_team = "",
away_team_logo = "",
away_team = "",
score = "Score",
rating_diff = "Rating Diff.") %>%
tab_style(cell_borders(sides = "right",
style = "dashed",
color = "grey"),
cells_body(columns = c(date, home_team, away_team),
rows = everything())) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(home_team, home_team_logo),
rows = home_team_runs > away_team_runs
)) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(away_team, away_team_logo),
rows = home_team_runs < away_team_runs
)) %>%
gt_theme_espn() %>%
tab_header(title = "Biggest NCAA Softball Upsets",
subtitle = paste0(format(start_date, "%m/%d")," - ",format(end_date, "%m/%d"))) %>%
tab_footnote(footnote = "(Strength of Schedule Adjusted Power Rating)",
locations = cells_column_labels(columns = rating_diff)) %>%
opt_align_table_header(align = "center") %>%
tab_options(heading.title.font.weight = "bold",
heading.title.font.size = "24px")
table
View(scoreboard_2023)
table <- scoreboard_test %>%
arrange(desc(abs(resid))) %>%
head(n = 5) %>%
select(date,home_team_logo, home_team, away_team_logo, away_team, home_team_runs, away_team_runs, score, rating_diff) %>%
gt() %>%
fmt_date(date, date_style = "Md") %>%
cols_hide(c(home_team_runs,away_team_runs)) %>%
fmt_number(rating_diff, decimals = 2) %>%
gt_img_rows(home_team_logo) %>%
gt_img_rows(away_team_logo) %>%
cols_label(date = "Date",
home_team_logo = "",
home_team = "",
away_team_logo = "",
away_team = "",
score = "Score",
rating_diff = "Rating Diff.") %>%
tab_style(cell_borders(sides = "right",
style = "dashed",
color = "grey"),
cells_body(columns = c(date, home_team, away_team),
rows = everything())) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(home_team, home_team_logo),
rows = home_team_runs > away_team_runs
)) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(away_team, away_team_logo),
rows = home_team_runs < away_team_runs
)) %>%
gt_theme_espn() %>%
tab_header(title = "Biggest NCAA Softball Upsets",
subtitle = "2023 Conference Tournaments") %>%
tab_footnote(footnote = "(Strength of Schedule Adjusted Power Rating)",
locations = cells_column_labels(columns = rating_diff)) %>%
opt_align_table_header(align = "center") %>%
tab_options(heading.title.font.weight = "bold",
heading.title.font.size = "24px")
table
gtsave(table, "Biggest Upsets.png")
scoreboard_test <- scoreboard_test %>%
mutate(score = paste(home_team_runs, away_team_runs, sep = "-"),
rating_diff = abs(rating_diff),
home_team = str_replace(home_team, "&#39;", "'"))
table <- scoreboard_test %>%
arrange(desc(abs(resid))) %>%
head(n = 5) %>%
select(date,home_team_logo, home_team, away_team_logo, away_team, home_team_runs, away_team_runs, score, rating_diff) %>%
gt() %>%
fmt_date(date, date_style = "Md") %>%
cols_hide(c(home_team_runs,away_team_runs)) %>%
fmt_number(rating_diff, decimals = 2) %>%
gt_img_rows(home_team_logo) %>%
gt_img_rows(away_team_logo) %>%
cols_label(date = "Date",
home_team_logo = "",
home_team = "",
away_team_logo = "",
away_team = "",
score = "Score",
rating_diff = "Rating Diff.") %>%
tab_style(cell_borders(sides = "right",
style = "dashed",
color = "grey"),
cells_body(columns = c(date, home_team, away_team),
rows = everything())) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(home_team, home_team_logo),
rows = home_team_runs > away_team_runs
)) %>%
tab_style(style = cell_fill(color = "#CDEBC5"),
locations = cells_body(
columns = c(away_team, away_team_logo),
rows = home_team_runs < away_team_runs
)) %>%
gt_theme_espn() %>%
tab_header(title = "Biggest NCAA Softball Upsets",
subtitle = "2023 Conference Tournaments") %>%
tab_footnote(footnote = "(Strength of Schedule Adjusted Power Rating)",
locations = cells_column_labels(columns = rating_diff)) %>%
opt_align_table_header(align = "center") %>%
tab_options(heading.title.font.weight = "bold",
heading.title.font.size = "24px")
table
gtsave(table, "Biggest Upsets.png")
